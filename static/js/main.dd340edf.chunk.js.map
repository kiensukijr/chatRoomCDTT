{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/index.js","Context/AuthProvider.js","hooks/useFirestore.js","Context/AppProvider.js","components/ChatRoom/UserInfo.js","components/ChatRoom/RoomList.js","components/ChatRoom/Sidebar.js","components/ChatRoom/Message.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/index.js","components/Modals/AddRoomModal.js","components/Modals/InviteMemberModal.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","window","location","hostname","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","arrName","curName","forEach","letter","createKeywords","Title","Typography","googleProvider","GoogleAuthProvider","Login","_jsx","children","Row","justify","style","height","_jsxs","Col","span","textAlign","level","Button","width","marginBottom","onClick","async","additionalUserInfo","user","signInWithPopup","provider","_user$displayName","isNewUser","email","photoURL","uid","providerId","keywords","toLowerCase","handleLogin","AuthContext","React","createContext","AuthProvider","_ref","setUser","useState","history","useHistory","isLoading","setIsLoading","useEffect","unsubscibed","onAuthStateChanged","Provider","value","Spin","position","inset","useFirestore","condition","documents","setDocuments","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","usersCondition","members","clearState","WrapperStyled","styled","div","_templateObject","_taggedTemplateLiteral","UserInfo","_displayName$charAt","Avatar","src","charAt","toUpperCase","Text","className","ghost","signOut","Panel","Collapse","PanelStyled","LinkStyled","Link","_templateObject2","RoomList","defaultActiveKey","header","type","icon","PlusSquareOutlined","handleAddRoom","SidebarStyled","Sidebar","formatDate","seconds","formattedDate","formatRelative","Date","slice","Message","text","size","HeaderStyled","ButtonGroupStyled","_templateObject3","ContentStyled","_templateObject4","FormStyled","Form","_templateObject5","MessageListStyled","_templateObject6","ChatWindow","inputValue","setInputValue","form","useForm","inputRef","useRef","messageListRef","handleOnSubmit","roomId","resetFields","current","setTimeout","focus","messages","scrollTop","scrollHeight","_Fragment","description","UserAddOutlined","Group","maxCount","member","_member$displayName","_member$displayName$c","Tooltip","title","ref","mes","Item","Input","onChange","e","target","onPressEnter","placeholder","bordered","autoComplete","Alert","message","showIcon","margin","closable","ChatRoom","AddRoomModal","Modal","visible","onOk","handleOk","console","log","FormData","getFieldValue","getFieldsValue","onCancel","handleCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","then","newOptions","Select","labelInValue","filterOption","onSearch","notFoundContent","opt","_opt$label","_opt$label$charAt","Option","concat","fetchUserList","search","limit","get","includes","InviteMemberModal","setValue","update","val","destroyOnClose","mode","newValue","App","BrowserRouter","Switch","Route","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd340edf.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/analytics';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n  apiKey : \"AIzaSyCbdcKzoneqxp3c0Ek6MIMMH8T2iy7GKbE\" , \r\n  authDomain : \"firechat-31465.firebaseapp.com\" , \r\n  projectId : \"firechat-31465\" , \r\n  storageBucket : \"firechat-31465.appspot.com\" , \r\n  messagingSenderId : \"355257303874\" , \r\n  appId : \"1:355257303874:web:7c3bd1a67d7f5d87567edb\" , \r\n  measurementId : \"G-0QMMRESJ11\" \r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  // auth.useEmulator('http://localhost:9099');\r\n  // db.useEmulator('localhost', '8080');\r\n}\r\n\r\nexport { db, auth };\r\nexport default firebase;\r\n","import firebase, { db } from './config';\r\n\r\nexport const addDocument = (collection, data) => {\r\n  const query = db.collection(collection);\r\n\r\n  query.add({\r\n    ...data,\r\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n  });\r\n};\r\n\r\n// tao keywords cho displayName, su dung cho search\r\nexport const generateKeywords = (displayName) => {\r\n  // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\r\n  // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\r\n  const name = displayName.split(' ').filter((word) => word);\r\n\r\n  const length = name.length;\r\n  let flagArray = [];\r\n  let result = [];\r\n  let stringArray = [];\r\n\r\n  /**\r\n   * khoi tao mang flag false\r\n   * dung de danh dau xem gia tri\r\n   * tai vi tri nay da duoc su dung\r\n   * hay chua\r\n   **/\r\n  for (let i = 0; i < length; i++) {\r\n    flagArray[i] = false;\r\n  }\r\n\r\n  const createKeywords = (name) => {\r\n    const arrName = [];\r\n    let curName = '';\r\n    name.split('').forEach((letter) => {\r\n      curName += letter;\r\n      arrName.push(curName);\r\n    });\r\n    return arrName;\r\n  };\r\n\r\n  function findPermutation(k) {\r\n    for (let i = 0; i < length; i++) {\r\n      if (!flagArray[i]) {\r\n        flagArray[i] = true;\r\n        result[k] = name[i];\r\n\r\n        if (k === length - 1) {\r\n          stringArray.push(result.join(' '));\r\n        }\r\n\r\n        findPermutation(k + 1);\r\n        flagArray[i] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  findPermutation(0);\r\n\r\n  const keywords = stringArray.reduce((acc, cur) => {\r\n    const words = createKeywords(cur);\r\n    return [...acc, ...words];\r\n  }, []);\r\n\r\n  return keywords;\r\n};\r\n","import React from 'react';\r\nimport { Row, Col, Button, Typography } from 'antd';\r\nimport firebase, { auth } from '../../firebase/config';\r\nimport { addDocument, generateKeywords } from '../../firebase/services';\r\n\r\nconst { Title } = Typography;\r\n\r\n// const fbProvider = new firebase.auth.FacebookAuthProvider();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default function Login() {\r\n  const handleLogin = async (provider) => {\r\n    const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n    if (additionalUserInfo?.isNewUser) {\r\n      addDocument('users', {\r\n        displayName: user.displayName,\r\n        email: user.email,\r\n        photoURL: user.photoURL,\r\n        uid: user.uid,\r\n        providerId: additionalUserInfo.providerId,\r\n        keywords: generateKeywords(user.displayName?.toLowerCase()),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify='center' style={{ height: 800 }}>\r\n        <Col span={8}>\r\n          <Title style={{ textAlign: 'center' }} level={3}>\r\n            Fun Chat\r\n          </Title>\r\n          <Button\r\n            style={{ width: '100%', marginBottom: 5 }}\r\n            onClick={() => handleLogin(googleProvider)}\r\n          >\r\n            Đăng nhập bằng Google\r\n          </Button>\r\n          {/* <Button\r\n            style={{ width: '100%' }}\r\n            onClick={() => handleLogin(fbProvider)}\r\n          >\r\n            Đăng nhập bằng Facebook\r\n          </Button> */}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase/config';\r\nimport { Spin } from 'antd';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscibed = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, email, uid, photoURL } = user;\r\n        setUser({\r\n          displayName,\r\n          email,\r\n          uid,\r\n          photoURL,\r\n        });\r\n        setIsLoading(false);\r\n        history.push('/');\r\n        return;\r\n      }\r\n\r\n      // reset user info\r\n      setUser({});\r\n      setIsLoading(false);\r\n      history.push('/login');\r\n    });\r\n\r\n    // clean function\r\n    return () => {\r\n      unsubscibed();\r\n    };\r\n  }, [history]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {isLoading ? <Spin style={{ position: 'fixed', inset: 0 }} /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { db } from '../firebase/config';\r\n\r\nconst useFirestore = (collection, condition) => {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    let collectionRef = db.collection(collection).orderBy('createdAt');\r\n    if (condition) {\r\n      if (!condition.compareValue || !condition.compareValue.length) {\r\n        // reset documents data\r\n        setDocuments([]);\r\n        return;\r\n      }\r\n\r\n      collectionRef = collectionRef.where(\r\n        condition.fieldName,\r\n        condition.operator,\r\n        condition.compareValue\r\n      );\r\n    }\r\n\r\n    const unsubscribe = collectionRef.onSnapshot((snapshot) => {\r\n      const documents = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n\r\n      setDocuments(documents);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [collection, condition]);\r\n\r\n  return documents;\r\n};\r\n\r\nexport default useFirestore;\r\n","import React, { useState } from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { AuthContext } from './AuthProvider';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport default function AppProvider({ children }) {\r\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n  const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\r\n  const [selectedRoomId, setSelectedRoomId] = useState('');\r\n\r\n  const {\r\n    user: { uid },\r\n  } = React.useContext(AuthContext);\r\n\r\n  const roomsCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'members',\r\n      operator: 'array-contains',\r\n      compareValue: uid,\r\n    };\r\n  }, [uid]);\r\n\r\n  const rooms = useFirestore('rooms', roomsCondition);\r\n\r\n  const selectedRoom = React.useMemo(\r\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\r\n    [rooms, selectedRoomId]\r\n  );\r\n\r\n  const usersCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'uid',\r\n      operator: 'in',\r\n      compareValue: selectedRoom.members,\r\n    };\r\n  }, [selectedRoom.members]);\r\n\r\n  const members = useFirestore('users', usersCondition);\r\n\r\n  const clearState = () => {\r\n    setSelectedRoomId('');\r\n    setIsAddRoomVisible(false);\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        rooms,\r\n        members,\r\n        selectedRoom,\r\n        isAddRoomVisible,\r\n        setIsAddRoomVisible,\r\n        selectedRoomId,\r\n        setSelectedRoomId,\r\n        isInviteMemberVisible,\r\n        setIsInviteMemberVisible,\r\n        clearState,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Avatar, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport { auth } from '../../firebase/config';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { AppContext } from '../../Context/AppProvider';\r\n\r\nconst WrapperStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid rgba(82, 38, 83);\r\n\r\n  .username {\r\n    color: white;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport default function UserInfo() {\r\n  const {\r\n    user: { displayName, photoURL },\r\n  } = React.useContext(AuthContext);\r\n  const { clearState } = React.useContext(AppContext);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <div>\r\n        <Avatar src={photoURL}>\r\n          {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\r\n        </Avatar>\r\n        <Typography.Text className='username'>{displayName}</Typography.Text>\r\n      </div>\r\n      <Button\r\n        ghost\r\n        onClick={() => {\r\n          // clear state in App Provider when logout\r\n          clearState();\r\n          auth.signOut();\r\n        }}\r\n      >\r\n        Log out\r\n      </Button>\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Collapse, Typography, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\nimport { AppContext } from '../../Context/AppProvider';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst PanelStyled = styled(Panel)`\r\n  &&& {\r\n    .ant-collapse-header,\r\n    p {\r\n      color: white;\r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 40px;\r\n    }\r\n\r\n    .add-room {\r\n      color: white;\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: white;\r\n`;\r\n\r\nexport default function RoomList() {\r\n  const { rooms, setIsAddRoomVisible, setSelectedRoomId } =\r\n    React.useContext(AppContext);\r\n\r\n  const handleAddRoom = () => {\r\n    setIsAddRoomVisible(true);\r\n  };\r\n\r\n  return (\r\n    <Collapse ghost defaultActiveKey={['1']}>\r\n      <PanelStyled header='List of rooms' key='1'>\r\n        {rooms.map((room) => (\r\n          <LinkStyled key={room.id} onClick={() => setSelectedRoomId(room.id)}>\r\n            {room.name}\r\n          </LinkStyled>\r\n        ))}\r\n        <Button\r\n          type='text'\r\n          icon={<PlusSquareOutlined />}\r\n          className='add-room'\r\n          onClick={handleAddRoom}\r\n        >\r\n          Add another room\r\n        </Button>\r\n      </PanelStyled>\r\n    </Collapse>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport UserInfo from './UserInfo';\r\nimport RoomList from './RoomList';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarStyled = styled.div`\r\n  background: #3f0e40;\r\n  color: white;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default function Sidebar() {\r\n  return (\r\n    <SidebarStyled>\r\n      <Row>\r\n        <Col span={24}>\r\n          <UserInfo />\r\n        </Col>\r\n        <Col span={24}>\r\n          <RoomList />\r\n        </Col>\r\n      </Row>\r\n    </SidebarStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Avatar, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { formatRelative } from 'date-fns/esm';\r\n\r\nconst WrapperStyled = styled.div`\r\n  margin-bottom: 10px;\r\n\r\n  .author {\r\n    margin-left: 5px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n  let formattedDate = '';\r\n\r\n  if (seconds) {\r\n    formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n\r\n    formattedDate =\r\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n  }\r\n\r\n  return formattedDate;\r\n}\r\n\r\nexport default function Message({ text, displayName, createdAt, photoURL }) {\r\n  return (\r\n    <WrapperStyled>\r\n      <div>\r\n        <Avatar size='small' src={photoURL}>\r\n          {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\r\n        </Avatar>\r\n        <Typography.Text className='author'>{displayName}</Typography.Text>\r\n        <Typography.Text className='date'>\r\n          {formatDate(createdAt?.seconds)}\r\n        </Typography.Text>\r\n      </div>\r\n      <div>\r\n        <Typography.Text className='content'>{text}</Typography.Text>\r\n      </div>\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import { UserAddOutlined } from '@ant-design/icons';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Tooltip, Avatar, Form, Input, Alert } from 'antd';\r\nimport Message from './Message';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport useFirestore from '../../hooks/useFirestore';\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n    }\r\n\r\n    &__description {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonGroupStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst WrapperStyled = styled.div`\r\n  height: 100vh;\r\n`;\r\n\r\nconst ContentStyled = styled.div`\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 11px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst MessageListStyled = styled.div`\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport default function ChatWindow() {\r\n  const { selectedRoom, members, setIsInviteMemberVisible } =\r\n    useContext(AppContext);\r\n  const {\r\n    user: { uid, photoURL, displayName },\r\n  } = useContext(AuthContext);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [form] = Form.useForm();\r\n  const inputRef = useRef(null);\r\n  const messageListRef = useRef(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    addDocument('messages', {\r\n      text: inputValue,\r\n      uid,\r\n      photoURL,\r\n      roomId: selectedRoom.id,\r\n      displayName,\r\n    });\r\n\r\n    form.resetFields(['message']);\r\n\r\n    // focus to input again after submit\r\n    if (inputRef?.current) {\r\n      setTimeout(() => {\r\n        inputRef.current.focus();\r\n      });\r\n    }\r\n  };\r\n\r\n  const condition = React.useMemo(\r\n    () => ({\r\n      fieldName: 'roomId',\r\n      operator: '==',\r\n      compareValue: selectedRoom.id,\r\n    }),\r\n    [selectedRoom.id]\r\n  );\r\n\r\n  const messages = useFirestore('messages', condition);\r\n\r\n  useEffect(() => {\r\n    // scroll to bottom after message changed\r\n    if (messageListRef?.current) {\r\n      messageListRef.current.scrollTop =\r\n        messageListRef.current.scrollHeight + 50;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      {selectedRoom.id ? (\r\n        <>\r\n          <HeaderStyled>\r\n            <div className='header__info'>\r\n              <p className='header__title'>{selectedRoom.name}</p>\r\n              <span className='header__description'>\r\n                {selectedRoom.description}\r\n              </span>\r\n            </div>\r\n            <ButtonGroupStyled>\r\n              <Button\r\n                icon={<UserAddOutlined />}\r\n                type='text'\r\n                onClick={() => setIsInviteMemberVisible(true)}\r\n              >\r\n                Invite\r\n              </Button>\r\n              <Avatar.Group size='small' maxCount={2}>\r\n                {members.map((member) => (\r\n                  <Tooltip title={member.displayName} key={member.id}>\r\n                    <Avatar src={member.photoURL}>\r\n                      {member.photoURL\r\n                        ? ''\r\n                        : member.displayName?.charAt(0)?.toUpperCase()}\r\n                    </Avatar>\r\n                  </Tooltip>\r\n                ))}\r\n              </Avatar.Group>\r\n            </ButtonGroupStyled>\r\n          </HeaderStyled>\r\n          <ContentStyled>\r\n            <MessageListStyled ref={messageListRef}>\r\n              {messages.map((mes) => (\r\n                <Message\r\n                  key={mes.id}\r\n                  text={mes.text}\r\n                  photoURL={mes.photoURL}\r\n                  displayName={mes.displayName}\r\n                  createdAt={mes.createdAt}\r\n                />\r\n              ))}\r\n            </MessageListStyled>\r\n            <FormStyled form={form}>\r\n              <Form.Item name='message'>\r\n                <Input\r\n                  ref={inputRef}\r\n                  onChange={handleInputChange}\r\n                  onPressEnter={handleOnSubmit}\r\n                  placeholder='Enter message...'\r\n                  bordered={false}\r\n                  autoComplete='off'\r\n                />\r\n              </Form.Item>\r\n              <Button type='primary' onClick={handleOnSubmit}>\r\n                Send\r\n              </Button>\r\n            </FormStyled>\r\n          </ContentStyled>\r\n        </>\r\n      ) : (\r\n        <Alert\r\n          message='Please select a room'\r\n          type='info'\r\n          showIcon\r\n          style={{ margin: 5 }}\r\n          closable\r\n        />\r\n      )}\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Sidebar from './Sidebar';\r\nimport ChatWindow from './ChatWindow';\r\n\r\nexport default function ChatRoom() {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={6}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col span={18}>\r\n          <ChatWindow />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Form, Modal, Input } from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\n\r\nexport default function AddRoomModal() {\r\n  const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\r\n  const {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    // handle logic\r\n    // add new room to firestore\r\n    console.log({FormData: form.getFieldValue()});\r\n    addDocument('rooms', { ...form.getFieldsValue(), members: [uid] });\r\n\r\n    // reset form value\r\n    form.resetFields();\r\n\r\n    setIsAddRoomVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n\r\n    setIsAddRoomVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Tạo phòng'\r\n        visible={isAddRoomVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form form={form} layout='vertical'>\r\n          <Form.Item label='Room name' name='name'>\r\n            <Input placeholder='Enter the room name' />\r\n          </Form.Item>\r\n          <Form.Item label='Description' name='description'>\r\n            <Input.TextArea placeholder='Enter a description' />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { debounce } from 'lodash';\r\nimport { db } from '../../firebase/config';\r\n\r\nfunction DebounceSelect({\r\n  fetchOptions,\r\n  debounceTimeout = 300,\r\n  curMembers,\r\n  ...props\r\n}) {\r\n  // Search: abcddassdfasdf\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceFetcher = React.useMemo(() => {\r\n    const loadOptions = (value) => {\r\n      setOptions([]);\r\n      setFetching(true);\r\n\r\n      fetchOptions(value, curMembers).then((newOptions) => {\r\n        setOptions(newOptions);\r\n        setFetching(false);\r\n      });\r\n    };\r\n\r\n    return debounce(loadOptions, debounceTimeout);\r\n  }, [debounceTimeout, fetchOptions, curMembers]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      // clear when unmount\r\n      setOptions([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size='small' /> : null}\r\n      {...props}\r\n    >\r\n      {options.map((opt) => (\r\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\r\n          <Avatar size='small' src={opt.photoURL}>\r\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n          {` ${opt.label}`}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nasync function fetchUserList(search, curMembers) {\r\n  return db\r\n    .collection('users')\r\n    .where('keywords', 'array-contains', search?.toLowerCase())\r\n    .orderBy('displayName')\r\n    .limit(20)\r\n    .get()\r\n    .then((snapshot) => {\r\n      return snapshot.docs\r\n        .map((doc) => ({\r\n          label: doc.data().displayName,\r\n          value: doc.data().uid,\r\n          photoURL: doc.data().photoURL,\r\n        }))\r\n        .filter((opt) => !curMembers.includes(opt.value));\r\n    });\r\n}\r\n\r\nexport default function InviteMemberModal() {\r\n  const {\r\n    isInviteMemberVisible,\r\n    setIsInviteMemberVisible,\r\n    selectedRoomId,\r\n    selectedRoom,\r\n  } = useContext(AppContext);\r\n  const [value, setValue] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    // update members in current room\r\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\r\n\r\n    roomRef.update({\r\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\r\n    });\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Invite more members'\r\n        visible={isInviteMemberVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form form={form} layout='vertical'>\r\n          <DebounceSelect\r\n            mode='multiple'\r\n            name='search-user'\r\n            label='Tên các thành viên'\r\n            value={value}\r\n            placeholder='Enter member name'\r\n            fetchOptions={fetchUserList}\r\n            onChange={(newValue) => setValue(newValue)}\r\n            style={{ width: '100%' }}\r\n            curMembers={selectedRoom.members}\r\n          />\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Login from './components/Login';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\nimport ChatRoom from './components/ChatRoom';\r\nimport AuthProvider from './Context/AuthProvider';\r\nimport AppProvider from './Context/AppProvider';\r\nimport AddRoomModal from './components/Modals/AddRoomModal';\r\nimport InviteMemberModal from './components/Modals/InviteMemberModal';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n        <AppProvider>\r\n          <Switch>\r\n            <Route component={Login} path='/login' />\r\n            <Route component={ChatRoom} path='/' />\r\n          </Switch>\r\n          <AddRoomModal />\r\n          <InviteMemberModal />\r\n        </AppProvider>\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}